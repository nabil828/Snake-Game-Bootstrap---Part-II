- `pygame` Basics @done
    - Install `pygame` @done
    - `import pygame` @done
    - `pygame.init()` @done
    - `surface = pygame.display.set_mode((800, 600))` @done
    - `surface.fill((0, 0, 0))` @done
    - `pygame.display.set_caption("Hello World!")` @done
    - `pygame.display.flip()` @done
    - `pygame.draw_rect()` @done
    - Pygame Event loop @done


- Classes and Objects @done
    - game, snake, food @done

- Snake walks! @done
    - add update() for game and snake @done
    - add direction to snake. great the direction enum @done
    - slow down the snake by addig FPS @done

- Snake eats! @done
    - replace x, y for a snake with segmenets. head of snake to the end of the tail @done
    - update the snake draw(): draw all the segnemnts @done
    - update the snake update() @done
        - shifting the segment to the left @done
        - update the head @done
        - test so far by creating a snake of size 4 @done
        - detect collision with food, @done
            - Increase the size of snake by one @done
            - change the location of the food @done

- Game over if we hit the wall or the snake itself @done
    - Game quit Vs. rasie an exception @done
    - guard the controls @done
    - guard the draw() and update() @done

- Restart @done
- Display score @done

- - Auto-pilot @done
    - Add keyboard controls @done
    - Modify the `Snake` update() @done
        - update the direction of the head based on the auto-pilot path @done
            - find a path using BFS path finding algorithm @done
                - you might need `find_neighbors` helper function @done
                - you might need `find_valid_neighbor` helper function @done
            - follow the path based on the direction of the first two segments. This will only change the direction of th head @done
    
    - Modify the `Snake` draw() to draw @done
        - visited segments @done
        - final path @done

